// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.9
// source: pkg/api/config/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeName          string `protobuf:"bytes,2,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	NodeIp            string `protobuf:"bytes,3,opt,name=nodeIp,proto3" json:"nodeIp,omitempty"`
	NodeStatus        string `protobuf:"bytes,4,opt,name=nodeStatus,proto3" json:"nodeStatus,omitempty"`
	TotalCpuCapacity  int64  `protobuf:"varint,5,opt,name=totalCpuCapacity,proto3" json:"totalCpuCapacity,omitempty"`
	CpuUsage          int64  `protobuf:"varint,6,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	TotalMemCapacity  int64  `protobuf:"varint,7,opt,name=totalMemCapacity,proto3" json:"totalMemCapacity,omitempty"`
	MemUsage          int64  `protobuf:"varint,8,opt,name=memUsage,proto3" json:"memUsage,omitempty"`
	TotalDiskCapacity int64  `protobuf:"varint,9,opt,name=totalDiskCapacity,proto3" json:"totalDiskCapacity,omitempty"`
	DiskUsage         int64  `protobuf:"varint,10,opt,name=diskUsage,proto3" json:"diskUsage,omitempty"`
	NetworkRxData     int64  `protobuf:"varint,11,opt,name=networkRxData,proto3" json:"networkRxData,omitempty"`
	NetworkTxData     int64  `protobuf:"varint,12,opt,name=networkTxData,proto3" json:"networkTxData,omitempty"`
}

func (x *NodeMetricRequest) Reset() {
	*x = NodeMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMetricRequest) ProtoMessage() {}

func (x *NodeMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMetricRequest.ProtoReflect.Descriptor instead.
func (*NodeMetricRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *NodeMetricRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NodeMetricRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeMetricRequest) GetNodeIp() string {
	if x != nil {
		return x.NodeIp
	}
	return ""
}

func (x *NodeMetricRequest) GetNodeStatus() string {
	if x != nil {
		return x.NodeStatus
	}
	return ""
}

func (x *NodeMetricRequest) GetTotalCpuCapacity() int64 {
	if x != nil {
		return x.TotalCpuCapacity
	}
	return 0
}

func (x *NodeMetricRequest) GetCpuUsage() int64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *NodeMetricRequest) GetTotalMemCapacity() int64 {
	if x != nil {
		return x.TotalMemCapacity
	}
	return 0
}

func (x *NodeMetricRequest) GetMemUsage() int64 {
	if x != nil {
		return x.MemUsage
	}
	return 0
}

func (x *NodeMetricRequest) GetTotalDiskCapacity() int64 {
	if x != nil {
		return x.TotalDiskCapacity
	}
	return 0
}

func (x *NodeMetricRequest) GetDiskUsage() int64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *NodeMetricRequest) GetNetworkRxData() int64 {
	if x != nil {
		return x.NetworkRxData
	}
	return 0
}

func (x *NodeMetricRequest) GetNetworkTxData() int64 {
	if x != nil {
		return x.NetworkTxData
	}
	return 0
}

type CSDMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TotalCpuCapacity  int32   `protobuf:"varint,2,opt,name=totalCpuCapacity,proto3" json:"totalCpuCapacity,omitempty"`
	CpuUsage          float64 `protobuf:"fixed64,3,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	CpuUsagePercent   float64 `protobuf:"fixed64,4,opt,name=cpuUsagePercent,proto3" json:"cpuUsagePercent,omitempty"`
	TotalMemCapacity  int32   `protobuf:"varint,5,opt,name=totalMemCapacity,proto3" json:"totalMemCapacity,omitempty"`
	MemUsage          int32   `protobuf:"varint,6,opt,name=memUsage,proto3" json:"memUsage,omitempty"`
	MemUsagePercent   float64 `protobuf:"fixed64,7,opt,name=memUsagePercent,proto3" json:"memUsagePercent,omitempty"`
	TotalDiskCapacity int32   `protobuf:"varint,8,opt,name=totalDiskCapacity,proto3" json:"totalDiskCapacity,omitempty"`
	DiskUsage         int32   `protobuf:"varint,9,opt,name=diskUsage,proto3" json:"diskUsage,omitempty"`
	DiskUsagePercent  float64 `protobuf:"fixed64,10,opt,name=diskUsagePercent,proto3" json:"diskUsagePercent,omitempty"`
	NetworkBandwidth  int32   `protobuf:"varint,11,opt,name=networkBandwidth,proto3" json:"networkBandwidth,omitempty"`
	NetworkRxData     int32   `protobuf:"varint,12,opt,name=networkRxData,proto3" json:"networkRxData,omitempty"`
	NetworkTxData     int32   `protobuf:"varint,13,opt,name=networkTxData,proto3" json:"networkTxData,omitempty"`
	CsdMetricScore    float64 `protobuf:"fixed64,14,opt,name=csdMetricScore,proto3" json:"csdMetricScore,omitempty"`
}

func (x *CSDMetricRequest) Reset() {
	*x = CSDMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDMetricRequest) ProtoMessage() {}

func (x *CSDMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDMetricRequest.ProtoReflect.Descriptor instead.
func (*CSDMetricRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *CSDMetricRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CSDMetricRequest) GetTotalCpuCapacity() int32 {
	if x != nil {
		return x.TotalCpuCapacity
	}
	return 0
}

func (x *CSDMetricRequest) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *CSDMetricRequest) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *CSDMetricRequest) GetTotalMemCapacity() int32 {
	if x != nil {
		return x.TotalMemCapacity
	}
	return 0
}

func (x *CSDMetricRequest) GetMemUsage() int32 {
	if x != nil {
		return x.MemUsage
	}
	return 0
}

func (x *CSDMetricRequest) GetMemUsagePercent() float64 {
	if x != nil {
		return x.MemUsagePercent
	}
	return 0
}

func (x *CSDMetricRequest) GetTotalDiskCapacity() int32 {
	if x != nil {
		return x.TotalDiskCapacity
	}
	return 0
}

func (x *CSDMetricRequest) GetDiskUsage() int32 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *CSDMetricRequest) GetDiskUsagePercent() float64 {
	if x != nil {
		return x.DiskUsagePercent
	}
	return 0
}

func (x *CSDMetricRequest) GetNetworkBandwidth() int32 {
	if x != nil {
		return x.NetworkBandwidth
	}
	return 0
}

func (x *CSDMetricRequest) GetNetworkRxData() int32 {
	if x != nil {
		return x.NetworkRxData
	}
	return 0
}

func (x *CSDMetricRequest) GetNetworkTxData() int32 {
	if x != nil {
		return x.NetworkTxData
	}
	return 0
}

func (x *CSDMetricRequest) GetCsdMetricScore() float64 {
	if x != nil {
		return x.CsdMetricScore
	}
	return 0
}

type MetricResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonConfig string `protobuf:"bytes,1,opt,name=json_config,json=jsonConfig,proto3" json:"json_config,omitempty"`
}

func (x *MetricResponse) Reset() {
	*x = MetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_config_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricResponse) ProtoMessage() {}

func (x *MetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_config_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricResponse.ProtoReflect.Descriptor instead.
func (*MetricResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *MetricResponse) GetJsonConfig() string {
	if x != nil {
		return x.JsonConfig
	}
	return ""
}

var File_pkg_api_config_config_proto protoreflect.FileDescriptor

var file_pkg_api_config_config_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9f, 0x03, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x70, 0x75, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x70, 0x75, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4d, 0x65, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x78, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x78, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x78, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x54, 0x78, 0x44, 0x61, 0x74, 0x61, 0x22, 0x9e, 0x04, 0x0a, 0x10, 0x43, 0x53, 0x44, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x70, 0x75, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x70, 0x75,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63,
	0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d,
	0x65, 0x6d, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x78, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x78, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x78, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x73, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x63, 0x73, 0x64, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x31, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x32, 0x54, 0x0a, 0x0a, 0x4e,
	0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x46, 0x0a, 0x11, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x19,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x51, 0x0a, 0x09, 0x43, 0x53, 0x44, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x44,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x53, 0x44, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x53, 0x44, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x70, 0x75, 0x2d, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x2d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_config_config_proto_rawDescOnce sync.Once
	file_pkg_api_config_config_proto_rawDescData = file_pkg_api_config_config_proto_rawDesc
)

func file_pkg_api_config_config_proto_rawDescGZIP() []byte {
	file_pkg_api_config_config_proto_rawDescOnce.Do(func() {
		file_pkg_api_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_config_config_proto_rawDescData)
	})
	return file_pkg_api_config_config_proto_rawDescData
}

var file_pkg_api_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_api_config_config_proto_goTypes = []interface{}{
	(*NodeMetricRequest)(nil), // 0: config.NodeMetricRequest
	(*CSDMetricRequest)(nil),  // 1: config.CSDMetricRequest
	(*MetricResponse)(nil),    // 2: config.MetricResponse
}
var file_pkg_api_config_config_proto_depIdxs = []int32{
	0, // 0: config.NodeMetric.receiveNodeMetric:input_type -> config.NodeMetricRequest
	1, // 1: config.CSDMetric.receiveCSDMetric:input_type -> config.CSDMetricRequest
	2, // 2: config.NodeMetric.receiveNodeMetric:output_type -> config.MetricResponse
	2, // 3: config.CSDMetric.receiveCSDMetric:output_type -> config.MetricResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_api_config_config_proto_init() }
func file_pkg_api_config_config_proto_init() {
	if File_pkg_api_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_config_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_config_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_config_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_api_config_config_proto_goTypes,
		DependencyIndexes: file_pkg_api_config_config_proto_depIdxs,
		MessageInfos:      file_pkg_api_config_config_proto_msgTypes,
	}.Build()
	File_pkg_api_config_config_proto = out.File
	file_pkg_api_config_config_proto_rawDesc = nil
	file_pkg_api_config_config_proto_goTypes = nil
	file_pkg_api_config_config_proto_depIdxs = nil
}
