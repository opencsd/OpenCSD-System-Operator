apiVersion: v1
kind: ConfigMap
metadata:
  name: instance-management-initdb-config
  namespace: system-operator
data:
  initdb.sql: |
    CREATE TABLE `workbench_user` (
        `user_id` VARCHAR(255) NOT NULL,
        PRIMARY KEY (user_id)
    );

    CREATE TABLE `query_log` (
        `query_id` INTEGER NOT NULL,
        `user_id` VARCHAR(255) NOT NULL,
        `query_statement` TEXT NOT NULL,
        `query_result` TEXT DEFAULT NULL,
        `execution_mode` ENUM('offloading', 'generic') DEFAULT NULL,
        `query_type` ENUM(
            'select',
            'update',
            'insert',
            'delete',
            'dcl',
            'ddl',
            'other'
        ) DEFAULT NULL,
        `start_time` DATETIME DEFAULT NULL,
        `end_time` DATETIME DEFAULT NULL,
        `execution_time` FLOAT DEFAULT NULL,
        `scanned_row_count` INTEGER DEFAULT NULL,
        `filtered_row_count` INTEGER DEFAULT NULL,
        `snippet_count` TINYINT DEFAULT NULL,
        PRIMARY KEY (query_id),
        FOREIGN KEY (user_id) REFERENCES workbench_user(user_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    CREATE TABLE `query_snippet` (
        `query_id` INTEGER NOT NULL NOT NULL,
        `work_id` INTEGER NOT NULL NOT NULL,
        `snippet_type` TINYINT DEFAULT NULL,
        `projection_count` TINYINT DEFAULT NULL,
        `filter_count` TINYINT DEFAULT NULL,
        `group_by_count` TINYINT DEFAULT NULL,
        `order_by_count` TINYINT DEFAULT NULL,
        `limit_exist` BOOLEAN DEFAULT NULL,
        PRIMARY KEY (query_id, work_id),
        FOREIGN KEY (query_id) REFERENCES query_log(query_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    CREATE TABLE `validation_option` (
        `option_id` INTEGER AUTO_INCREMENT NOT NULL,
        `option_name` VARCHAR(255) NOT NULL,
        `user_id` VARCHAR(255) NOT NULL,
        `dbms_type` ENUM(
            'mysql',
            'tibero_db',
            'column_db',
            'approximate_db'
        ) DEFAULT 'mysql',
        `storage_type` ENUM('csd', 'ssd') DEFAULT 'csd',
        `csd_count` TINYINT DEFAULT 8,
        `csd_type` ENUM('ngd', 'scaleflux', 'smart_ssd') DEFAULT 'ngd',
        `block_count` TINYINT DEFAULT 15,
        `scheduling_algorithm` ENUM('random', 'dcs', 'dsi', 'auto') DEFAULT 'dcs',
        `using_index` BOOLEAN DEFAULT FALSE,
        PRIMARY KEY (option_id),
        FOREIGN KEY (user_id) REFERENCES workbench_user(user_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    CREATE TABLE `validation_log` (
        `validation_id` INTEGER NOT NULL,
        `user_id` VARCHAR(255) NOT NULL,
        `query_statement` TEXT DEFAULT NULL,
        `timestamp` DATETIME DEFAULT NULL,
        `option_id` INTEGER DEFAULT NULL,
        `storage_cpu_usage_predict` FLOAT DEFAULT NULL,
        `storage_power_usage_predict` FLOAT DEFAULT NULL,
        `network_usage_predict` FLOAT DEFAULT NULL,
        `scanned_row_count_predict` INTEGER DEFAULT NULL,
        `filtered_row_count_predict` INTEGER DEFAULT NULL,
        `execution_time_predict` FLOAT DEFAULT NULL,
        `snippet_count` FLOAT DEFAULT NULL,
        'storage_type' ENUM('csd','ssd') DEFAULT NULL,
        PRIMARY KEY (validation_id),
        FOREIGN KEY (user_id) REFERENCES workbench_user(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
        FOREIGN KEY (option_id) REFERENCES validation_option(option_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    CREATE TABLE `validation_snippet` (
        `validation_id` INTEGER NOT NULL,
        `work_id` INTEGER NOT NULL,
        `snippet_type` TINYINT DEFAULT NULL,
        `projection_count` TINYINT DEFAULT NULL,
        `filter_count` TINYINT DEFAULT NULL,
        `group_by_count` TINYINT DEFAULT NULL,
        `order_by_count` TINYINT DEFAULT NULL,
        `limit_exist` BOOLEAN DEFAULT NULL,
        PRIMARY KEY (validation_id, work_id),
        FOREIGN KEY (validation_id) REFERENCES validation_log(validation_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    CREATE TABLE `validation_csd_metric` (
        `validation_id` INTEGER NOT NULL,
        `storage_id` INTEGER NOT NULL,
        `csd_cpu_usage_predict` FLOAT DEFAULT NULL,
        `csd_power_usage_predict` FLOAT DEFAULT NULL,
        FOREIGN KEY (validation_id) REFERENCES validation_log(validation_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    CREATE TABLE `query_environment_info` (
        `block_count` TINYINT DEFAULT 15,
        `scheduling_algorithm` ENUM('random', 'dcs', 'dsi', 'auto') DEFAULT 'dcs',
        `using_index` BOOLEAN DEFAULT FALSE
    );

    CREATE TABLE `instance_debug_log` (
        `query_id` INTEGER NOT NULL,
        `query_engine_log` TEXT DEFAULT NULL,
        `storage_engine_interface_log` TEXT DEFAULT NULL,
        `storage_engine_offloading_log` TEXT DEFAULT NULL,
        `storage_engine_merging_log` TEXT DEFAULT NULL,
        `storage_engine_monitoring_log` TEXT DEFAULT NULL,
        PRIMARY KEY (query_id),
        FOREIGN KEY (query_id) REFERENCES query_log(query_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    CREATE TABLE `csd_debug_log` (
        `query_id` INTEGER NOT NULL,
        `storage_id` INTEGER NOT NULL,
        `csd_log` TEXT DEFAULT NULL,
        PRIMARY KEY (query_id, storage_id),
        FOREIGN KEY (query_id) REFERENCES query_log(query_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    CREATE TABLE `validation_debug_log` (
        `validation_id` INTEGER NOT NULL,
        `validation_log` TEXT DEFAULT NULL,
        PRIMARY KEY (validation_id),
        FOREIGN KEY (validation_id) REFERENCES validation_log(validation_id) ON DELETE CASCADE ON UPDATE CASCADE
    );

    INSERT `workbench_user` values ("keti-opencsd-admin");

    INSERT `query_environment_info` values (15, 'dcs', 0);

    INSERT INTO
        `validation_option` (option_name, user_id, dbms_type, storage_type, csd_count, csd_type, block_count, scheduling_algorithm, using_index)
    values
        ("offloading_option", "keti-opencsd-admin", "mysql", "csd", 8, "ngd", 15, "dcs", false);

    INSERT INTO
        `validation_option` (option_name, user_id, dbms_type, storage_type, csd_count, csd_type, block_count, scheduling_algorithm, using_index)
    values
        ("non_offloading_option", "keti-opencsd-admin", "mysql", "ssd", null, null, null, null, null);
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: instance-info-db-pv
  namespace: system-operator
  labels:
    app: instance-info-db
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  storageClassName: mysql-db
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mnt/mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: instance-info-db-pvc
  namespace: system-operator
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: mysql-db
  selector:
    matchLabels:
      app: instance-info-db
---
apiVersion: v1
kind: Service
metadata:
  name: instance-info-db-svc
  namespace: system-operator
spec:
  type: NodePort
  ports:
    - port: 40702
      targetPort: 3306
      nodePort: 30702
  selector:
    app: instance-info-db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: instance-info-db
  namespace: system-operator
spec:
  replicas: 1
  serviceName: instance-info-db-svc
  selector:
    matchLabels:
      app: instance-info-db
  template:
    metadata:
      labels:
        app: instance-info-db
    spec:
      nodeSelector:
        layer: operator
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: keti_opencsd
            - name: MYSQL_PASSWORD
              value: ketilinux
            - name: MYSQL_ROOT_PASSWORD
              value: ketilinux
            - name: MYSQL_USER
              value: keti
          image: mysql:latest
          name: mysql
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - name: instance-info-db-entrypoint
              mountPath: /docker-entrypoint-initdb.d
            - name: instance-info-db
              mountPath: /var/lib/mysql
      volumes:
        - name: instance-info-db-entrypoint
          configMap:
            name: instance-management-initdb-config
            defaultMode: 0755
        - name: instance-info-db
          persistentVolumeClaim:
            claimName: instance-info-db-pvc
